{"ast":null,"code":"export var findFolder = function findFolder() {\n  var folders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return folders.find(function (folder) {\n    return folder.folder_id === folderId;\n  });\n};\nexport var findNote = function findNote() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var noteId = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('notehelper', notes);\n  notes.find(function (note) {\n    return note.note_id === noteId;\n  });\n};\nexport var getNotesForFolder = function getNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return !folderId ? notes : notes.filter(function (note) {\n    return note.folder_id === folderId;\n  });\n};\nexport var countNotesForFolder = function countNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.filter(function (note) {\n    return note.folder_id === folderId;\n  }).length;\n};\nexport var fetchFolders = function fetchFolders() {\n  return fetch('http://localhost:8000/api/folders').then(function (res) {\n    return res.json();\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};\nexport var fetchNotes = function fetchNotes() {\n  return fetch('http://localhost:8000/api/notes').then(function (res) {\n    return res.json();\n  }).catch(function (error) {\n    return console.log(error);\n  });\n};","map":{"version":3,"sources":["/Users/Home/Projects/noteful-client-2/frontend/src/notes-helpers.js"],"names":["findFolder","folders","folderId","find","folder","folder_id","findNote","notes","noteId","console","log","note","note_id","getNotesForFolder","filter","countNotesForFolder","length","fetchFolders","fetch","then","res","json","catch","error","fetchNotes"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,OAAD,uEAAW,EAAX;AAAA,MAAeC,QAAf;AAAA,SACxBD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,SAAP,KAAqBH,QAAzB;AAAA,GAAnB,CADwB;AAAA,CAAnB;AAGP,OAAO,IAAMI,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAA1B;AACAA,EAAAA,KAAK,CAACJ,IAAN,CAAW,UAAAQ,IAAI;AAAA,WAAIA,IAAI,CAACC,OAAL,KAAiBJ,MAArB;AAAA,GAAf;AACD,CAHM;AAKP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACN,KAAD,uEAAS,EAAT;AAAA,MAAaL,QAAb;AAAA,SAC/B,CAACA,QAAD,GAAYK,KAAZ,GAAoBA,KAAK,CAACO,MAAN,CAAa,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACN,SAAL,KAAmBH,QAAvB;AAAA,GAAjB,CADW;AAAA,CAA1B;AAGP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACR,KAAD,uEAAS,EAAT;AAAA,MAAaL,QAAb;AAAA,SACjCK,KAAK,CAACO,MAAN,CAAa,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACN,SAAL,KAAmBH,QAAvB;AAAA,GAAjB,EAAkDc,MADjB;AAAA,CAA5B;AAGP,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,SAAOC,KAAK,CAAC,mCAAD,CAAL,CACJC,IADI,CACC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADJ,EAEJC,KAFI,CAEE,UAAAC,KAAK;AAAA,WAAId,OAAO,CAACC,GAAR,CAAYa,KAAZ,CAAJ;AAAA,GAFP,CAAP;AAGD,CAJM;AAMP,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B,SAAON,KAAK,CAAC,iCAAD,CAAL,CACJC,IADI,CACC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GADJ,EAEJC,KAFI,CAEE,UAAAC,KAAK;AAAA,WAAId,OAAO,CAACC,GAAR,CAAYa,KAAZ,CAAJ;AAAA,GAFP,CAAP;AAGD,CAJM","sourcesContent":["export const findFolder = (folders = [], folderId) =>\n  folders.find(folder => folder.folder_id === folderId);\n\nexport const findNote = (notes = [], noteId) => {\n  console.log('notehelper', notes);\n  notes.find(note => note.note_id === noteId);\n};\n\nexport const getNotesForFolder = (notes = [], folderId) =>\n  !folderId ? notes : notes.filter(note => note.folder_id === folderId);\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter(note => note.folder_id === folderId).length;\n\nexport const fetchFolders = () => {\n  return fetch('http://localhost:8000/api/folders')\n    .then(res => res.json())\n    .catch(error => console.log(error));\n}\n\nexport const fetchNotes = () => {\n  return fetch('http://localhost:8000/api/notes')\n    .then(res => res.json())\n    .catch(error => console.log(error));\n}\n  \n  "]},"metadata":{},"sourceType":"module"}