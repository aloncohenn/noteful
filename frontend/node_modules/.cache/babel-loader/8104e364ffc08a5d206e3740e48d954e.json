{"ast":null,"code":"import _classCallCheck from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Home/Projects/noteful-client-2/frontend/src/AddNote/AddNote.js\";\nimport React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css';\nimport AppContext from '../AppContext';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nvar AddNote =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddNote, _Component);\n\n  function AddNote(props) {\n    var _this;\n\n    _classCallCheck(this, AddNote);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddNote).call(this, props));\n    _this.state = {\n      noteName: '',\n      noteValid: false,\n      noteContent: '',\n      contentValid: false,\n      noteFolder: 'b0715efe-ffaf-11e8-8eb2-f2801f1b9fd1',\n      validationErrors: {\n        noteName: '',\n        noteContent: ''\n      }\n    };\n    return _this;\n  }\n\n  _createClass(AddNote, [{\n    key: \"handleSubmit\",\n    value: function handleSubmit(event, noteName, noteContent, folderId) {\n      event.preventDefault();\n      console.log('handle submit ran');\n      this.context.addNote(event, noteName, noteContent, folderId);\n    }\n  }, {\n    key: \"validateName\",\n    value: function validateName(name) {\n      var hasError = false;\n\n      if (name.length === 0) {\n        hasError = true;\n      }\n\n      this.setState({\n        noteValid: !hasError\n      });\n    }\n  }, {\n    key: \"validateContent\",\n    value: function validateContent(content) {\n      var hasError = false;\n\n      if (content.length === 0) {\n        hasError = true;\n      }\n\n      this.setState({\n        contentValid: !hasError\n      });\n    }\n  }, {\n    key: \"formValid\",\n    value: function formValid(name) {\n      if (this.state.folderNameValid) {\n        this.setState({\n          folderName: name\n        });\n      }\n    }\n  }, {\n    key: \"updateName\",\n    value: function updateName(name) {\n      var _this2 = this;\n\n      this.setState({\n        noteName: name\n      }, function () {\n        return _this2.validateName(name);\n      });\n    }\n  }, {\n    key: \"updateContent\",\n    value: function updateContent(content) {\n      var _this3 = this;\n\n      this.setState({\n        noteContent: content\n      }, function () {\n        return _this3.validateContent(content);\n      });\n    }\n  }, {\n    key: \"updateFolder\",\n    value: function updateFolder(folderId) {\n      this.setState({\n        noteFolder: folderId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return React.createElement(\"section\", {\n        className: \"AddNote\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Create a note\"), React.createElement(ErrorBoundary, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(NotefulForm, {\n        onSubmit: function onSubmit(event, name, content, folderId) {\n          return _this4.handleSubmit(event, _this4.state.noteName, _this4.state.noteContent, _this4.state.noteFolder);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-name-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Name\"), React.createElement(\"input\", {\n        type: \"text\",\n        id: \"note-name-input\",\n        onChange: function onChange(e) {\n          return _this4.updateName(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-content-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Content\"), React.createElement(\"textarea\", {\n        id: \"note-content-input\",\n        onChange: function onChange(e) {\n          return _this4.updateContent(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"note-folder-select\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Folder\"), React.createElement(\"select\", {\n        id: \"note-folder-select\",\n        onChange: function onChange(e) {\n          return _this4.updateFolder(e.target.value);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, this.context.folders.map(function (folder) {\n        return React.createElement(\"option\", {\n          key: folder.id,\n          value: folder.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115\n          },\n          __self: this\n        }, folder.name);\n      }))), React.createElement(\"div\", {\n        className: \"buttons\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Add note\")))));\n    }\n  }]);\n\n  return AddNote;\n}(Component);\n\nAddNote.contextType = AppContext;\nAddNote.defaultProps = {\n  folders: []\n};\nexport { AddNote as default };","map":{"version":3,"sources":["/Users/Home/Projects/noteful-client-2/frontend/src/AddNote/AddNote.js"],"names":["React","Component","NotefulForm","AppContext","ErrorBoundary","AddNote","props","state","noteName","noteValid","noteContent","contentValid","noteFolder","validationErrors","event","folderId","preventDefault","console","log","context","addNote","name","hasError","length","setState","content","folderNameValid","folderName","validateName","validateContent","handleSubmit","e","updateName","target","value","updateContent","updateFolder","folders","map","folder","id","contextType","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NotefulForm from '../NotefulForm/NotefulForm';\nimport './AddNote.css';\nimport AppContext from '../AppContext';\nimport ErrorBoundary from '../ErrorBoundary/ErrorBoundary';\n\nexport default class AddNote extends Component {\n  static contextType = AppContext;\n\n  static defaultProps = {\n    folders: []\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      noteName: '',\n      noteValid: false,\n      noteContent: '',\n      contentValid: false,\n      noteFolder: 'b0715efe-ffaf-11e8-8eb2-f2801f1b9fd1',\n      validationErrors: {\n        noteName: '',\n        noteContent: ''\n      }\n    };\n  }\n  handleSubmit(event, noteName, noteContent, folderId) {\n    event.preventDefault();\n    console.log('handle submit ran');\n    this.context.addNote(event, noteName, noteContent, folderId);\n  }\n\n  validateName(name) {\n    let hasError = false;\n\n    if (name.length === 0) {\n      hasError = true;\n    }\n\n    this.setState({\n      noteValid: !hasError\n    });\n  }\n\n  validateContent(content) {\n    let hasError = false;\n\n    if (content.length === 0) {\n      hasError = true;\n    }\n\n    this.setState({\n      contentValid: !hasError\n    });\n  }\n\n  formValid(name) {\n    if (this.state.folderNameValid) {\n      this.setState({ folderName: name });\n    }\n  }\n\n  updateName(name) {\n    this.setState({ noteName: name }, () => this.validateName(name));\n  }\n\n  updateContent(content) {\n    this.setState({ noteContent: content }, () =>\n      this.validateContent(content)\n    );\n  }\n\n  updateFolder(folderId) {\n    this.setState({ noteFolder: folderId });\n  }\n\n  render() {\n    return (\n      <section className=\"AddNote\">\n        <h2>Create a note</h2>\n        <ErrorBoundary>\n          <NotefulForm\n            onSubmit={(event, name, content, folderId) =>\n              this.handleSubmit(\n                event,\n                this.state.noteName,\n                this.state.noteContent,\n                this.state.noteFolder\n              )\n            }\n          >\n            <div className=\"field\">\n              <label htmlFor=\"note-name-input\">Name</label>\n              <input\n                type=\"text\"\n                id=\"note-name-input\"\n                onChange={e => this.updateName(e.target.value)}\n              />\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"note-content-input\">Content</label>\n              <textarea\n                id=\"note-content-input\"\n                onChange={e => this.updateContent(e.target.value)}\n              />\n            </div>\n            <div className=\"field\">\n              <label htmlFor=\"note-folder-select\">Folder</label>\n              <select\n                id=\"note-folder-select\"\n                onChange={e => this.updateFolder(e.target.value)}\n              >\n                {this.context.folders.map(folder => (\n                  <option key={folder.id} value={folder.id}>\n                    {folder.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"buttons\">\n              <button type=\"submit\">Add note</button>\n            </div>\n          </NotefulForm>\n        </ErrorBoundary>\n      </section>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}