{"ast":null,"code":"import _classCallCheck from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Home/Projects/noteful-client-2/frontend/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Home/Projects/noteful-client-2/frontend/src/App/App.js\";\nimport React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AppContext from '../AppContext';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport { getNotesForFolder, findNote, findFolder, countNotesForFolder } from '../notes-helpers';\nimport './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      notes: [],\n      folders: []\n    };\n\n    _this.handleDeleteNote = function (id) {\n      console.log('delete runs');\n\n      var newNotes = _this.state.notes.filter(function (note) {\n        return note.note_id !== id;\n      });\n\n      _this.setState({\n        notes: newNotes\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:8000/api/folders').then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        return _this2.setState({\n          folders: resJson\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n      fetch('http://localhost:8000/api/notes').then(function (res) {\n        return res.json();\n      }).then(function (resJson) {\n        return _this2.setState({\n          notes: resJson\n        });\n      }).catch(function (error) {\n        return console.log(error);\n      });\n    }\n  }, {\n    key: \"postFolderName\",\n    value: function postFolderName(folderName) {\n      var url = 'http://localhost:8000/api/folders';\n      fetch(url, {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: folderName\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return console.log(res);\n      });\n    }\n  }, {\n    key: \"addNote\",\n    value: function addNote(event, noteName, noteContent, folderId) {\n      console.log('noteName', noteName);\n      event.preventDefault();\n      var url = 'http://localhost:8000/api/notes';\n      fetch(url, {\n        method: 'post',\n        headers: {\n          Accept: 'application/json, text/plain, */*',\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name: noteName,\n          content: noteContent,\n          folder_id: folderId\n        })\n      }).then(function (res) {\n        return res.json();\n      }).then(function (res) {\n        return console.log(res);\n      });\n    }\n  }, {\n    key: \"renderNavRoutes\",\n    value: function renderNavRoutes() {\n      var _this$state = this.state,\n          notes = _this$state.notes,\n          folders = _this$state.folders;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folder_id'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          component: NoteListNav,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:note_id\",\n        render: function render(routeProps) {\n          console.log(routeProps);\n          var note_id = routeProps.match.params.note_id;\n          var note = findNote(notes, note_id) || {};\n          var folder = findFolder(folders, note.folder_id);\n          return React.createElement(NotePageNav, Object.assign({}, routeProps, {\n            folder: folder,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: NotePageNav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"renderMainRoutes\",\n    value: function renderMainRoutes() {\n      var notes = this.state.notes;\n      return React.createElement(React.Fragment, null, ['/', '/folder/:folder_id'].map(function (path) {\n        return React.createElement(Route, {\n          exact: true,\n          key: path,\n          path: path,\n          render: function render(routeProps) {\n            var folder_id = routeProps.match.params.folder_id;\n            var notesForFolder = getNotesForFolder(notes, folder_id);\n            return React.createElement(NoteListMain, Object.assign({}, routeProps, {\n              notes: notesForFolder,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 114\n              },\n              __self: this\n            }));\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        });\n      }), React.createElement(Route, {\n        path: \"/note/:note_id\",\n        render: function render(routeProps) {\n          var note_id = routeProps.match.params.note_id;\n          var note = findNote(notes, note_id) || {};\n          return React.createElement(NotePageMain, Object.assign({}, routeProps, {\n            note: note,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-folder\",\n        component: AddFolder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/add-note\",\n        component: AddNote,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var contextValue = {\n        folders: this.state.folders,\n        notes: this.state.notes,\n        deleteNote: this.handleDeleteNote,\n        addFolder: this.postFolderName,\n        addNote: this.addNote\n      };\n      return React.createElement(AppContext.Provider, {\n        value: contextValue,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"App__nav\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.renderNavRoutes()), React.createElement(\"header\", {\n        className: \"App__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Noteful\"), ' ', React.createElement(FontAwesomeIcon, {\n        icon: \"check-double\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }))), React.createElement(\"main\", {\n        className: \"App__main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, this.renderMainRoutes())));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Home/Projects/noteful-client-2/frontend/src/App/App.js"],"names":["React","Component","Route","Link","FontAwesomeIcon","AppContext","NoteListNav","NotePageNav","NoteListMain","NotePageMain","AddFolder","AddNote","getNotesForFolder","findNote","findFolder","countNotesForFolder","App","state","notes","folders","handleDeleteNote","id","console","log","newNotes","filter","note","note_id","setState","fetch","then","res","json","resJson","catch","error","folderName","url","method","headers","Accept","body","JSON","stringify","name","event","noteName","noteContent","folderId","preventDefault","content","folder_id","map","path","routeProps","match","params","folder","notesForFolder","contextValue","deleteNote","addFolder","postFolderName","addNote","renderNavRoutes","renderMainRoutes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport AppContext from '../AppContext';\nimport NoteListNav from '../NoteListNav/NoteListNav';\nimport NotePageNav from '../NotePageNav/NotePageNav';\nimport NoteListMain from '../NoteListMain/NoteListMain';\nimport NotePageMain from '../NotePageMain/NotePageMain';\nimport AddFolder from '../AddFolder/AddFolder';\nimport AddNote from '../AddNote/AddNote';\nimport {\n  getNotesForFolder,\n  findNote,\n  findFolder,\n  countNotesForFolder\n} from '../notes-helpers';\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    notes: [],\n    folders: []\n  };\n\n  componentDidMount() {\n    fetch('http://localhost:8000/api/folders')\n      .then(res => res.json())\n      .then(resJson =>\n        this.setState({\n          folders: resJson\n        })\n      )\n      .catch(error => console.log(error));\n\n    fetch('http://localhost:8000/api/notes')\n      .then(res => res.json())\n      .then(resJson =>\n        this.setState({\n          notes: resJson\n        })\n      )\n      .catch(error => console.log(error));\n  }\n\n  postFolderName(folderName) {\n    const url = 'http://localhost:8000/api/folders';\n    fetch(url, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({ name: folderName })\n    })\n      .then(res => res.json())\n      .then(res => console.log(res));\n  }\n\n  addNote(event, noteName, noteContent, folderId) {\n    console.log('noteName', noteName);\n    event.preventDefault();\n    const url = 'http://localhost:8000/api/notes';\n    fetch(url, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json, text/plain, */*',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        name: noteName,\n        content: noteContent,\n        folder_id: folderId\n      })\n    })\n      .then(res => res.json())\n      .then(res => console.log(res));\n  }\n\n  renderNavRoutes() {\n    const { notes, folders } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folder_id'].map(path => (\n          <Route exact key={path} path={path} component={NoteListNav} />\n        ))}\n        <Route\n          path=\"/note/:note_id\"\n          render={routeProps => {\n            console.log(routeProps);\n            const { note_id } = routeProps.match.params;\n            const note = findNote(notes, note_id) || {};\n            const folder = findFolder(folders, note.folder_id);\n            return <NotePageNav {...routeProps} folder={folder} />;\n          }}\n        />\n        <Route path=\"/add-folder\" component={NotePageNav} />\n        <Route path=\"/add-note\" component={NotePageNav} />\n      </>\n    );\n  }\n\n  renderMainRoutes() {\n    const { notes } = this.state;\n    return (\n      <>\n        {['/', '/folder/:folder_id'].map(path => (\n          <Route\n            exact\n            key={path}\n            path={path}\n            render={routeProps => {\n              const { folder_id } = routeProps.match.params;\n              const notesForFolder = getNotesForFolder(notes, folder_id);\n              return <NoteListMain {...routeProps} notes={notesForFolder} />;\n            }}\n          />\n        ))}\n        <Route\n          path=\"/note/:note_id\"\n          render={routeProps => {\n            const { note_id } = routeProps.match.params;\n            const note = findNote(notes, note_id) || {};\n            return <NotePageMain {...routeProps} note={note} />;\n          }}\n        />\n        <Route path=\"/add-folder\" component={AddFolder} />\n        <Route path=\"/add-note\" component={AddNote} />\n      </>\n    );\n  }\n\n  handleDeleteNote = id => {\n    console.log('delete runs');\n    let newNotes = this.state.notes.filter(note => {\n      return note.note_id !== id;\n    });\n    this.setState({\n      notes: newNotes\n    });\n  };\n\n  render() {\n    const contextValue = {\n      folders: this.state.folders,\n      notes: this.state.notes,\n      deleteNote: this.handleDeleteNote,\n      addFolder: this.postFolderName,\n      addNote: this.addNote\n    };\n\n    return (\n      <AppContext.Provider value={contextValue}>\n        <div className=\"App\">\n          <nav className=\"App__nav\">{this.renderNavRoutes()}</nav>\n          <header className=\"App__header\">\n            <h1>\n              <Link to=\"/\">Noteful</Link>{' '}\n              <FontAwesomeIcon icon=\"check-double\" />\n            </h1>\n          </header>\n          <main className=\"App__main\">{this.renderMainRoutes()}</main>\n        </div>\n      </AppContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}