{"ast":null,"code":"export var findFolder = function findFolder() {\n  var folders = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return folders.find(function (folder) {\n    return Number(folder.folder_id) === Number(folderId);\n  });\n};\nexport var findNote = function findNote() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var noteId = arguments.length > 1 ? arguments[1] : undefined;\n  console.log('notehelper', notes[0] === noteId);\n  notes.find(function (note) {\n    return note.note_id === Number(noteId);\n  });\n};\nexport var getNotesForFolder = function getNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return !folderId ? notes : notes.filter(function (note) {\n    return note.folder_id === Number(folderId);\n  });\n};\nexport var countNotesForFolder = function countNotesForFolder() {\n  var notes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var folderId = arguments.length > 1 ? arguments[1] : undefined;\n  return notes.filter(function (note) {\n    return note.folder_id === Number(folderId);\n  }).length;\n};","map":{"version":3,"sources":["/Users/Home/Projects/noteful-client-2/frontend/src/notes-helpers.js"],"names":["findFolder","folders","folderId","find","folder","Number","folder_id","findNote","notes","noteId","console","log","note","note_id","getNotesForFolder","filter","countNotesForFolder","length"],"mappings":"AAAA,OAAO,IAAMA,UAAU,GAAG,SAAbA,UAAa;AAAA,MAACC,OAAD,uEAAW,EAAX;AAAA,MAAeC,QAAf;AAAA,SACxBD,OAAO,CAACE,IAAR,CAAa,UAAAC,MAAM;AAAA,WAAIC,MAAM,CAACD,MAAM,CAACE,SAAR,CAAN,KAA6BD,MAAM,CAACH,QAAD,CAAvC;AAAA,GAAnB,CADwB;AAAA,CAAnB;AAGP,OAAO,IAAMK,QAAQ,GAAG,SAAXA,QAAW,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BH,KAAK,CAAC,CAAD,CAAL,KAAaC,MAAvC;AACAD,EAAAA,KAAK,CAACL,IAAN,CAAW,UAAAS,IAAI;AAAA,WAAIA,IAAI,CAACC,OAAL,KAAiBR,MAAM,CAACI,MAAD,CAA3B;AAAA,GAAf;AACD,CAHM;AAKP,OAAO,IAAMK,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,MAACN,KAAD,uEAAS,EAAT;AAAA,MAAaN,QAAb;AAAA,SAC/B,CAACA,QAAD,GAAYM,KAAZ,GAAoBA,KAAK,CAACO,MAAN,CAAa,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACN,SAAL,KAAmBD,MAAM,CAACH,QAAD,CAA7B;AAAA,GAAjB,CADW;AAAA,CAA1B;AAGP,OAAO,IAAMc,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,MAACR,KAAD,uEAAS,EAAT;AAAA,MAAaN,QAAb;AAAA,SACjCM,KAAK,CAACO,MAAN,CAAa,UAAAH,IAAI;AAAA,WAAIA,IAAI,CAACN,SAAL,KAAmBD,MAAM,CAACH,QAAD,CAA7B;AAAA,GAAjB,EAA0De,MADzB;AAAA,CAA5B","sourcesContent":["export const findFolder = (folders = [], folderId) =>\n  folders.find(folder => Number(folder.folder_id) === Number(folderId));\n\nexport const findNote = (notes = [], noteId) => {\n  console.log('notehelper', notes[0] === noteId);\n  notes.find(note => note.note_id === Number(noteId));\n};\n\nexport const getNotesForFolder = (notes = [], folderId) =>\n  !folderId ? notes : notes.filter(note => note.folder_id === Number(folderId));\n\nexport const countNotesForFolder = (notes = [], folderId) =>\n  notes.filter(note => note.folder_id === Number(folderId)).length;\n  \n  "]},"metadata":{},"sourceType":"module"}